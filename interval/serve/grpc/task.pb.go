// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HandleTaskReq struct {
	TaskCode             int32      `protobuf:"varint,1,opt,name=TaskCode,proto3" json:"TaskCode,omitempty"`
	EmailInfo            *EmailInfo `protobuf:"bytes,2,opt,name=EmailInfo,proto3" json:"EmailInfo,omitempty"`
	SpiderUrl            string     `protobuf:"bytes,3,opt,name=SpiderUrl,proto3" json:"SpiderUrl,omitempty"`
	SyncData             *SyncData  `protobuf:"bytes,4,opt,name=SyncData,proto3" json:"SyncData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *HandleTaskReq) Reset()         { *m = HandleTaskReq{} }
func (m *HandleTaskReq) String() string { return proto.CompactTextString(m) }
func (*HandleTaskReq) ProtoMessage()    {}
func (*HandleTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *HandleTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleTaskReq.Unmarshal(m, b)
}
func (m *HandleTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleTaskReq.Marshal(b, m, deterministic)
}
func (m *HandleTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleTaskReq.Merge(m, src)
}
func (m *HandleTaskReq) XXX_Size() int {
	return xxx_messageInfo_HandleTaskReq.Size(m)
}
func (m *HandleTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_HandleTaskReq proto.InternalMessageInfo

func (m *HandleTaskReq) GetTaskCode() int32 {
	if m != nil {
		return m.TaskCode
	}
	return 0
}

func (m *HandleTaskReq) GetEmailInfo() *EmailInfo {
	if m != nil {
		return m.EmailInfo
	}
	return nil
}

func (m *HandleTaskReq) GetSpiderUrl() string {
	if m != nil {
		return m.SpiderUrl
	}
	return ""
}

func (m *HandleTaskReq) GetSyncData() *SyncData {
	if m != nil {
		return m.SyncData
	}
	return nil
}

type HandleTaskResp struct {
	Code                 int32       `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	ErrorMsg             string      `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	SpiderInfo           *SpiderInfo `protobuf:"bytes,3,opt,name=SpiderInfo,proto3" json:"SpiderInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *HandleTaskResp) Reset()         { *m = HandleTaskResp{} }
func (m *HandleTaskResp) String() string { return proto.CompactTextString(m) }
func (*HandleTaskResp) ProtoMessage()    {}
func (*HandleTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *HandleTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleTaskResp.Unmarshal(m, b)
}
func (m *HandleTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleTaskResp.Marshal(b, m, deterministic)
}
func (m *HandleTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleTaskResp.Merge(m, src)
}
func (m *HandleTaskResp) XXX_Size() int {
	return xxx_messageInfo_HandleTaskResp.Size(m)
}
func (m *HandleTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_HandleTaskResp proto.InternalMessageInfo

func (m *HandleTaskResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *HandleTaskResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *HandleTaskResp) GetSpiderInfo() *SpiderInfo {
	if m != nil {
		return m.SpiderInfo
	}
	return nil
}

type EmailInfo struct {
	Ac                   string   `protobuf:"bytes,1,opt,name=Ac,proto3" json:"Ac,omitempty"`
	Ps                   string   `protobuf:"bytes,2,opt,name=Ps,proto3" json:"Ps,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=Host,proto3" json:"Host,omitempty"`
	Receive              string   `protobuf:"bytes,4,opt,name=Receive,proto3" json:"Receive,omitempty"`
	ModalIndex           int32    `protobuf:"varint,5,opt,name=ModalIndex,proto3" json:"ModalIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailInfo) Reset()         { *m = EmailInfo{} }
func (m *EmailInfo) String() string { return proto.CompactTextString(m) }
func (*EmailInfo) ProtoMessage()    {}
func (*EmailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{2}
}

func (m *EmailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailInfo.Unmarshal(m, b)
}
func (m *EmailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailInfo.Marshal(b, m, deterministic)
}
func (m *EmailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailInfo.Merge(m, src)
}
func (m *EmailInfo) XXX_Size() int {
	return xxx_messageInfo_EmailInfo.Size(m)
}
func (m *EmailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EmailInfo proto.InternalMessageInfo

func (m *EmailInfo) GetAc() string {
	if m != nil {
		return m.Ac
	}
	return ""
}

func (m *EmailInfo) GetPs() string {
	if m != nil {
		return m.Ps
	}
	return ""
}

func (m *EmailInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *EmailInfo) GetReceive() string {
	if m != nil {
		return m.Receive
	}
	return ""
}

func (m *EmailInfo) GetModalIndex() int32 {
	if m != nil {
		return m.ModalIndex
	}
	return 0
}

type SpiderInfo struct {
	Urls                 []string `protobuf:"bytes,1,rep,name=Urls,proto3" json:"Urls,omitempty"`
	Emails               []string `protobuf:"bytes,2,rep,name=Emails,proto3" json:"Emails,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpiderInfo) Reset()         { *m = SpiderInfo{} }
func (m *SpiderInfo) String() string { return proto.CompactTextString(m) }
func (*SpiderInfo) ProtoMessage()    {}
func (*SpiderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{3}
}

func (m *SpiderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpiderInfo.Unmarshal(m, b)
}
func (m *SpiderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpiderInfo.Marshal(b, m, deterministic)
}
func (m *SpiderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpiderInfo.Merge(m, src)
}
func (m *SpiderInfo) XXX_Size() int {
	return xxx_messageInfo_SpiderInfo.Size(m)
}
func (m *SpiderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SpiderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SpiderInfo proto.InternalMessageInfo

func (m *SpiderInfo) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func (m *SpiderInfo) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

type SyncData struct {
	MasterSyncData *MasterSyncData            `protobuf:"bytes,1,opt,name=MasterSyncData,proto3" json:"MasterSyncData,omitempty"`
	SpiderSyncData map[string]*SpiderSyncData `protobuf:"bytes,2,rep,name=SpiderSyncData,proto3" json:"SpiderSyncData" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// EmailSyncData EmailSyncData = 3;
	SyncId               int64    `protobuf:"varint,4,opt,name=SyncId,proto3" json:"SyncId,omitempty"`
	SyncLastId           int64    `protobuf:"varint,5,opt,name=SyncLastId,proto3" json:"SyncLastId,omitempty"`
	SyncType             int32    `protobuf:"varint,6,opt,name=SyncType,proto3" json:"SyncType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncData) Reset()         { *m = SyncData{} }
func (m *SyncData) String() string { return proto.CompactTextString(m) }
func (*SyncData) ProtoMessage()    {}
func (*SyncData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{4}
}

func (m *SyncData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncData.Unmarshal(m, b)
}
func (m *SyncData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncData.Marshal(b, m, deterministic)
}
func (m *SyncData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncData.Merge(m, src)
}
func (m *SyncData) XXX_Size() int {
	return xxx_messageInfo_SyncData.Size(m)
}
func (m *SyncData) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncData.DiscardUnknown(m)
}

var xxx_messageInfo_SyncData proto.InternalMessageInfo

func (m *SyncData) GetMasterSyncData() *MasterSyncData {
	if m != nil {
		return m.MasterSyncData
	}
	return nil
}

func (m *SyncData) GetSpiderSyncData() map[string]*SpiderSyncData {
	if m != nil {
		return m.SpiderSyncData
	}
	return nil
}

func (m *SyncData) GetSyncId() int64 {
	if m != nil {
		return m.SyncId
	}
	return 0
}

func (m *SyncData) GetSyncLastId() int64 {
	if m != nil {
		return m.SyncLastId
	}
	return 0
}

func (m *SyncData) GetSyncType() int32 {
	if m != nil {
		return m.SyncType
	}
	return 0
}

type MasterSyncData struct {
	IpList               map[string]string `protobuf:"bytes,1,rep,name=IpList,proto3" json:"IpList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SpiderUrls           []string          `protobuf:"bytes,2,rep,name=SpiderUrls,proto3" json:"SpiderUrls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MasterSyncData) Reset()         { *m = MasterSyncData{} }
func (m *MasterSyncData) String() string { return proto.CompactTextString(m) }
func (*MasterSyncData) ProtoMessage()    {}
func (*MasterSyncData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{5}
}

func (m *MasterSyncData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterSyncData.Unmarshal(m, b)
}
func (m *MasterSyncData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterSyncData.Marshal(b, m, deterministic)
}
func (m *MasterSyncData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterSyncData.Merge(m, src)
}
func (m *MasterSyncData) XXX_Size() int {
	return xxx_messageInfo_MasterSyncData.Size(m)
}
func (m *MasterSyncData) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterSyncData.DiscardUnknown(m)
}

var xxx_messageInfo_MasterSyncData proto.InternalMessageInfo

func (m *MasterSyncData) GetIpList() map[string]string {
	if m != nil {
		return m.IpList
	}
	return nil
}

func (m *MasterSyncData) GetSpiderUrls() []string {
	if m != nil {
		return m.SpiderUrls
	}
	return nil
}

type SpiderSyncData struct {
	SpiderAllData        *SpiderAllData      `protobuf:"bytes,1,opt,name=SpiderAllData,proto3" json:"SpiderAllData,omitempty"`
	SpiderRecordData     []*SpiderRecordData `protobuf:"bytes,2,rep,name=SpiderRecordData,proto3" json:"SpiderRecordData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SpiderSyncData) Reset()         { *m = SpiderSyncData{} }
func (m *SpiderSyncData) String() string { return proto.CompactTextString(m) }
func (*SpiderSyncData) ProtoMessage()    {}
func (*SpiderSyncData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{6}
}

func (m *SpiderSyncData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpiderSyncData.Unmarshal(m, b)
}
func (m *SpiderSyncData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpiderSyncData.Marshal(b, m, deterministic)
}
func (m *SpiderSyncData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpiderSyncData.Merge(m, src)
}
func (m *SpiderSyncData) XXX_Size() int {
	return xxx_messageInfo_SpiderSyncData.Size(m)
}
func (m *SpiderSyncData) XXX_DiscardUnknown() {
	xxx_messageInfo_SpiderSyncData.DiscardUnknown(m)
}

var xxx_messageInfo_SpiderSyncData proto.InternalMessageInfo

func (m *SpiderSyncData) GetSpiderAllData() *SpiderAllData {
	if m != nil {
		return m.SpiderAllData
	}
	return nil
}

func (m *SpiderSyncData) GetSpiderRecordData() []*SpiderRecordData {
	if m != nil {
		return m.SpiderRecordData
	}
	return nil
}

type SpiderAllData struct {
	WaitSpiderQueue      []string          `protobuf:"bytes,3,rep,name=WaitSpiderQueue,proto3" json:"WaitSpiderQueue,omitempty"`
	HadSpiderQueue       []string          `protobuf:"bytes,4,rep,name=HadSpiderQueue,proto3" json:"HadSpiderQueue,omitempty"`
	ErrorSpiderQueue     []string          `protobuf:"bytes,5,rep,name=ErrorSpiderQueue,proto3" json:"ErrorSpiderQueue,omitempty"`
	CacheEmail           map[string]string `protobuf:"bytes,6,rep,name=CacheEmail,proto3" json:"CacheEmail,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HostUrl              string            `protobuf:"bytes,7,opt,name=HostUrl,proto3" json:"HostUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SpiderAllData) Reset()         { *m = SpiderAllData{} }
func (m *SpiderAllData) String() string { return proto.CompactTextString(m) }
func (*SpiderAllData) ProtoMessage()    {}
func (*SpiderAllData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{7}
}

func (m *SpiderAllData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpiderAllData.Unmarshal(m, b)
}
func (m *SpiderAllData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpiderAllData.Marshal(b, m, deterministic)
}
func (m *SpiderAllData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpiderAllData.Merge(m, src)
}
func (m *SpiderAllData) XXX_Size() int {
	return xxx_messageInfo_SpiderAllData.Size(m)
}
func (m *SpiderAllData) XXX_DiscardUnknown() {
	xxx_messageInfo_SpiderAllData.DiscardUnknown(m)
}

var xxx_messageInfo_SpiderAllData proto.InternalMessageInfo

func (m *SpiderAllData) GetWaitSpiderQueue() []string {
	if m != nil {
		return m.WaitSpiderQueue
	}
	return nil
}

func (m *SpiderAllData) GetHadSpiderQueue() []string {
	if m != nil {
		return m.HadSpiderQueue
	}
	return nil
}

func (m *SpiderAllData) GetErrorSpiderQueue() []string {
	if m != nil {
		return m.ErrorSpiderQueue
	}
	return nil
}

func (m *SpiderAllData) GetCacheEmail() map[string]string {
	if m != nil {
		return m.CacheEmail
	}
	return nil
}

func (m *SpiderAllData) GetHostUrl() string {
	if m != nil {
		return m.HostUrl
	}
	return ""
}

type SpiderRecordData struct {
	TargetUrl            string          `protobuf:"bytes,1,opt,name=TargetUrl,proto3" json:"TargetUrl,omitempty"`
	Resp                 *HandleTaskResp `protobuf:"bytes,2,opt,name=Resp,proto3" json:"Resp,omitempty"`
	Ip                   string          `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SpiderRecordData) Reset()         { *m = SpiderRecordData{} }
func (m *SpiderRecordData) String() string { return proto.CompactTextString(m) }
func (*SpiderRecordData) ProtoMessage()    {}
func (*SpiderRecordData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{8}
}

func (m *SpiderRecordData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpiderRecordData.Unmarshal(m, b)
}
func (m *SpiderRecordData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpiderRecordData.Marshal(b, m, deterministic)
}
func (m *SpiderRecordData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpiderRecordData.Merge(m, src)
}
func (m *SpiderRecordData) XXX_Size() int {
	return xxx_messageInfo_SpiderRecordData.Size(m)
}
func (m *SpiderRecordData) XXX_DiscardUnknown() {
	xxx_messageInfo_SpiderRecordData.DiscardUnknown(m)
}

var xxx_messageInfo_SpiderRecordData proto.InternalMessageInfo

func (m *SpiderRecordData) GetTargetUrl() string {
	if m != nil {
		return m.TargetUrl
	}
	return ""
}

func (m *SpiderRecordData) GetResp() *HandleTaskResp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (m *SpiderRecordData) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func init() {
	proto.RegisterType((*HandleTaskReq)(nil), "grpc.HandleTaskReq")
	proto.RegisterType((*HandleTaskResp)(nil), "grpc.HandleTaskResp")
	proto.RegisterType((*EmailInfo)(nil), "grpc.EmailInfo")
	proto.RegisterType((*SpiderInfo)(nil), "grpc.SpiderInfo")
	proto.RegisterType((*SyncData)(nil), "grpc.SyncData")
	proto.RegisterMapType((map[string]*SpiderSyncData)(nil), "grpc.SyncData.SpiderSyncDataEntry")
	proto.RegisterType((*MasterSyncData)(nil), "grpc.MasterSyncData")
	proto.RegisterMapType((map[string]string)(nil), "grpc.MasterSyncData.IpListEntry")
	proto.RegisterType((*SpiderSyncData)(nil), "grpc.SpiderSyncData")
	proto.RegisterType((*SpiderAllData)(nil), "grpc.SpiderAllData")
	proto.RegisterMapType((map[string]string)(nil), "grpc.SpiderAllData.CacheEmailEntry")
	proto.RegisterType((*SpiderRecordData)(nil), "grpc.SpiderRecordData")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 660 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x76, 0x92, 0xd6, 0x13, 0x35, 0x8d, 0xa6, 0x55, 0x65, 0x45, 0x08, 0x45, 0x46, 0x42,
	0x51, 0x25, 0x22, 0x14, 0x2e, 0x2d, 0x82, 0x43, 0x28, 0x95, 0x6a, 0xd4, 0x4a, 0x65, 0xdb, 0xaa,
	0xe7, 0xc5, 0x5e, 0x4a, 0xa8, 0x89, 0xdd, 0xb5, 0x53, 0x91, 0xaf, 0xe0, 0x27, 0xe0, 0xc4, 0x57,
	0xf0, 0x67, 0x68, 0x76, 0x1d, 0x7b, 0xed, 0xe4, 0xc2, 0x6d, 0xe6, 0xf9, 0xed, 0xcc, 0x9b, 0x99,
	0xdd, 0x31, 0x40, 0xce, 0xb3, 0xfb, 0x71, 0x2a, 0x93, 0x3c, 0xc1, 0xd6, 0x9d, 0x4c, 0x43, 0xff,
	0x97, 0x05, 0x3b, 0x67, 0x7c, 0x1e, 0xc5, 0xe2, 0x9a, 0x67, 0xf7, 0x4c, 0x3c, 0xe0, 0x00, 0xb6,
	0xc9, 0x3c, 0x49, 0x22, 0xe1, 0x59, 0x43, 0x6b, 0xd4, 0x66, 0xa5, 0x8f, 0x2f, 0xc1, 0x3d, 0xfd,
	0xce, 0x67, 0x71, 0x30, 0xff, 0x92, 0x78, 0xf6, 0xd0, 0x1a, 0x75, 0x27, 0xbb, 0x63, 0x8a, 0x33,
	0x2e, 0x61, 0x56, 0x31, 0xf0, 0x29, 0xb8, 0x57, 0xe9, 0x2c, 0x12, 0xf2, 0x46, 0xc6, 0x9e, 0x33,
	0xb4, 0x46, 0x2e, 0xab, 0x00, 0x3c, 0x84, 0xed, 0xab, 0xe5, 0x3c, 0xfc, 0xc0, 0x73, 0xee, 0xb5,
	0x54, 0xac, 0x9e, 0x8e, 0xb5, 0x42, 0x59, 0xf9, 0xdd, 0x97, 0xd0, 0x33, 0x55, 0x66, 0x29, 0x22,
	0xb4, 0x0c, 0x89, 0xca, 0x26, 0xe9, 0xa7, 0x52, 0x26, 0xf2, 0x22, 0xbb, 0x53, 0xea, 0x5c, 0x56,
	0xfa, 0xf8, 0x0a, 0x40, 0xa7, 0x56, 0xda, 0x1d, 0x95, 0xaf, 0x5f, 0xe4, 0x2b, 0x71, 0x66, 0x70,
	0xfc, 0xa5, 0x51, 0x2c, 0xf6, 0xc0, 0x9e, 0x86, 0x2a, 0x99, 0xcb, 0xec, 0x69, 0x48, 0xfe, 0x65,
	0x56, 0x24, 0xb1, 0x2f, 0x33, 0x92, 0x73, 0x96, 0x64, 0x79, 0x51, 0xa5, 0xb2, 0xd1, 0x83, 0x2d,
	0x26, 0x42, 0x31, 0x7b, 0x14, 0xaa, 0x3e, 0x97, 0xad, 0x5c, 0x7c, 0x06, 0x70, 0x91, 0x44, 0x3c,
	0x0e, 0xe6, 0x91, 0xf8, 0xe1, 0xb5, 0x55, 0x09, 0x06, 0xe2, 0x1f, 0x99, 0x62, 0x29, 0xf6, 0x8d,
	0x8c, 0x33, 0xcf, 0x1a, 0x3a, 0x14, 0x9b, 0x6c, 0x3c, 0x80, 0x8e, 0x12, 0x47, 0x1a, 0x08, 0x2d,
	0x3c, 0xff, 0xaf, 0x5d, 0x75, 0x15, 0xdf, 0x42, 0xef, 0x82, 0x67, 0xb9, 0x90, 0x65, 0x9f, 0x2d,
	0x55, 0xf7, 0xbe, 0xae, 0xbb, 0xfe, 0x8d, 0x35, 0xb8, 0xf8, 0x11, 0x7a, 0x5a, 0x44, 0x79, 0x9a,
	0x52, 0x75, 0x27, 0x7e, 0x7d, 0x4a, 0xe3, 0x3a, 0xe9, 0x74, 0x9e, 0xcb, 0x25, 0x6b, 0x9c, 0x24,
	0xb9, 0x64, 0x07, 0x91, 0xea, 0x84, 0xc3, 0x0a, 0x8f, 0x1a, 0x41, 0xd6, 0x39, 0xcf, 0xf2, 0x20,
	0x52, 0x8d, 0x70, 0x98, 0x81, 0xd0, 0x44, 0xc9, 0xbb, 0x5e, 0xa6, 0xc2, 0xeb, 0xe8, 0xcb, 0xb8,
	0xf2, 0x07, 0xb7, 0xb0, 0xb7, 0x21, 0x35, 0xf6, 0xc1, 0xb9, 0x17, 0xcb, 0x62, 0x54, 0x64, 0xe2,
	0x21, 0xb4, 0x1f, 0x79, 0xbc, 0x10, 0xc5, 0x8d, 0xdd, 0x37, 0xa7, 0x5e, 0x56, 0xaf, 0x29, 0x6f,
	0xec, 0x23, 0xcb, 0xff, 0x6d, 0x35, 0xfb, 0x86, 0x47, 0xd0, 0x09, 0xd2, 0xf3, 0x59, 0x96, 0xab,
	0x21, 0x74, 0x27, 0xc3, 0x4d, 0x1d, 0x1c, 0x6b, 0x8a, 0xee, 0x40, 0xc1, 0x57, 0x15, 0xae, 0xae,
	0xfc, 0x6a, 0x58, 0x06, 0x32, 0x38, 0x86, 0xae, 0x71, 0x6c, 0x83, 0xfa, 0x7d, 0x53, 0xbd, 0x6b,
	0xea, 0xfc, 0x69, 0x35, 0x27, 0x84, 0xc7, 0xb0, 0xa3, 0x91, 0x69, 0x1c, 0x1b, 0x03, 0xdf, 0x33,
	0x4b, 0x2e, 0x3e, 0xb1, 0x3a, 0x13, 0xdf, 0x43, 0x5f, 0x03, 0x4c, 0x84, 0x89, 0x8c, 0x8c, 0x81,
	0x1f, 0x98, 0xa7, 0xab, 0xaf, 0x6c, 0x8d, 0xef, 0xff, 0xb1, 0x1b, 0xf9, 0x71, 0x04, 0xbb, 0xb7,
	0x7c, 0x96, 0x6b, 0xf0, 0xd3, 0x42, 0x2c, 0x84, 0xe7, 0xa8, 0x1e, 0x34, 0x61, 0x7c, 0x41, 0x4f,
	0x3c, 0x32, 0x89, 0x2d, 0x45, 0x6c, 0xa0, 0x78, 0x08, 0x7d, 0xf5, 0xa8, 0x4d, 0x66, 0x5b, 0x31,
	0xd7, 0x70, 0x3c, 0x01, 0x38, 0xe1, 0xe1, 0x57, 0xa1, 0x1e, 0x87, 0xd7, 0x51, 0xd5, 0x3c, 0xdf,
	0xd0, 0x8b, 0x71, 0xc5, 0xd2, 0xd3, 0x33, 0x8e, 0xd1, 0x33, 0xa6, 0xe7, 0x4c, 0x3b, 0x6c, 0x4b,
	0x3f, 0xe3, 0xc2, 0x1d, 0xbc, 0x83, 0xdd, 0xc6, 0xc1, 0xff, 0x9a, 0xdf, 0xb7, 0xf5, 0x8e, 0xd3,
	0xca, 0xbc, 0xe6, 0xf2, 0x4e, 0xa8, 0x74, 0x3a, 0x4a, 0x05, 0xe0, 0x08, 0x5a, 0xb4, 0xfc, 0xea,
	0x17, 0xb9, 0xbe, 0x18, 0x99, 0x62, 0xd0, 0x7e, 0x0a, 0xd2, 0x62, 0x1b, 0xd9, 0x41, 0x3a, 0x99,
	0x42, 0x8b, 0x18, 0x78, 0x0c, 0x50, 0xf1, 0x71, 0x6f, 0x3d, 0xc2, 0xc3, 0x60, 0x63, 0x58, 0xff,
	0xc9, 0xe7, 0x8e, 0xfa, 0x6f, 0xbc, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x3c, 0x05, 0x03, 0xa8,
	0x45, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskClient is the client API for Task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskClient interface {
	HandleTask(ctx context.Context, in *HandleTaskReq, opts ...grpc.CallOption) (*HandleTaskResp, error)
}

type taskClient struct {
	cc *grpc.ClientConn
}

func NewTaskClient(cc *grpc.ClientConn) TaskClient {
	return &taskClient{cc}
}

func (c *taskClient) HandleTask(ctx context.Context, in *HandleTaskReq, opts ...grpc.CallOption) (*HandleTaskResp, error) {
	out := new(HandleTaskResp)
	err := c.cc.Invoke(ctx, "/grpc.Task/HandleTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServer is the server API for Task service.
type TaskServer interface {
	HandleTask(context.Context, *HandleTaskReq) (*HandleTaskResp, error)
}

// UnimplementedTaskServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServer struct {
}

func (*UnimplementedTaskServer) HandleTask(ctx context.Context, req *HandleTaskReq) (*HandleTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleTask not implemented")
}

func RegisterTaskServer(s *grpc.Server, srv TaskServer) {
	s.RegisterService(&_Task_serviceDesc, srv)
}

func _Task_HandleTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).HandleTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Task/HandleTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).HandleTask(ctx, req.(*HandleTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Task_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Task",
	HandlerType: (*TaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleTask",
			Handler:    _Task_HandleTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task.proto",
}
